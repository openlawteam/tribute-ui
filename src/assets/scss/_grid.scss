@use "sass:math";

@use "./variables" as *; /* load without namespace for convenience */
@use "./mixins" as *; /* load without namespace for convenience */
@use "./functions" as *; /* load without namespace for convenience */

// Thank you! https://www.toptal.com/sass/css3-flexbox-sass-grid-tutorial
// NOTE: px changed to em-based breakpoints

$grid__bp-sm: em($bp-sm);
$grid__bp-md: em($bp-md);
$grid__bp-lg: em($bp-lg);
$grid__bp-xl: em($bp-xl);
$grid__cols: 12;

$map-grid-props: (
  "": 0,
  "-sm": $grid__bp-sm,
  "-md": $grid__bp-md,
  "-lg": $grid__bp-lg,
  "-xl": $grid__bp-xl,
);

@mixin create-mq($breakpoint, $min-or-max) {
  @if ($breakpoint == 0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $breakpoint ) {
      @content;
    }
  }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
  @include create-mq($breakpoint, "min") {
    &__col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    @for $i from 1 through $grid-cols {
      &__col#{$modifier}-#{$i} {
        flex-basis: math.div(100, math.div($grid-cols, $i)) * 1%;
      }
      &__col#{$modifier}-offset-#{$i} {
        margin-left: math.div(100, math.div($grid-cols, $i)) * 1%;
      }
    }
  }
}

@each $modifier, $breakpoint in $map-grid-props {
  @if ($modifier == "") {
    $modifier: "-xs";
  }
  @include create-mq($breakpoint - 1, "max") {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }
  @include create-mq($breakpoint, "min") {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}

.grid {
  max-width: $grid__bp-md /* * 1px*/;
  margin: 0 auto;
  &--fluid {
    margin: 0;
    max-width: 100%;
  }
  &__row {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    &--center {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      width: 100%;
    }
  }
  @each $modifier, $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid__cols, $breakpoint);
  }
}

.grid-container {
  margin: 0 auto;
}

.grid__header {
  display: inline-block;
  @include fluid-type(
    $bp-sm,
    $bp-xl,
    16px,
    18px
  ); /* min font-size 1rem, max 1.125rem */
  margin-bottom: 1rem;
  letter-spacing: 1px;
}

.grid__cards {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  column-gap: 2em;
  row-gap: 2em;
  margin-bottom: 2.75rem;

  @media only screen and (max-width: em($bp-sm)) {
    row-gap: 1em;
  }
}
